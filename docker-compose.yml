version: '3.8'

services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: ba-agent-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: ba-agent-postgres
    environment:
      POSTGRES_USER: ba_user
      POSTGRES_PASSWORD: ba_pass
      POSTGRES_DB: ba_agent
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ba-agent-backend
    ports:
      - "5000:5000"
    environment:
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - DATABASE_URL=postgresql+psycopg2://ba_user:ba_pass@postgres:5432/ba_agent
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ACS_CONNECTION_STRING=${ACS_CONNECTION_STRING}
      - ACS_SENDER_ADDRESS=${ACS_SENDER_ADDRESS}
      - APPROVAL_RECIPIENT_EMAIL=${APPROVAL_RECIPIENT_EMAIL}
    depends_on:
      - qdrant
      - postgres
    volumes:
      - ./backend:/app
      - backend_data:/app/data
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ba-agent-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  qdrant_storage:
  backend_data:
  postgres_data: 